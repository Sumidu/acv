on:
  push:
    branches: master
  schedule:
    - cron: '0 0 * * MON,THU'
    
name: Auto Render CV

jobs:
  render:
    name: Render cv to PDF
    runs-on: macOS-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-r@v2
      - name: Use binary packages where possible
        run: |
          echo 'options(pkgType="binary")' >> ~/.Rprofile
        shell: bash
      - name: Install OpenSSL and create a symlink
        run: |
          brew install openssl@1.1
          ln -s /opt/homebrew/Cellar/openssl@1.1/1.1.1l_1 /opt/homebrew/opt/openssl
          path+=("/opt/homebrew/opt/openssl@1.1/bin")
          export LDFLAGS="-L/opt/homebrew/opt/openssl@1.1/lib"
          export CPPFLAGS="-I/opt/homebrew/opt/openssl@1.1/include"
          export PKG_CONFIG_PATH="/opt/homebrew/opt/openssl@1.1/lib/pkgconfig"
          export LD_LIBRARY_PATH="/opt/homebrew/opt/openssl@1.1/lib"
        shell: bash
      # Add gettext installation to fix libintl.h error
      - name: Install gettext
        run: |
          brew install gettext
          brew link gettext --force
          echo "CFLAGS=-I/opt/homebrew/opt/gettext/include ${CFLAGS}" >> $GITHUB_ENV
          echo "CPPFLAGS=-I/opt/homebrew/opt/gettext/include ${CPPFLAGS}" >> $GITHUB_ENV
          echo "LDFLAGS=-L/opt/homebrew/opt/gettext/lib ${LDFLAGS}" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=/opt/homebrew/opt/gettext/lib/pkgconfig:${PKG_CONFIG_PATH}" >> $GITHUB_ENV
        shell: bash
      #- name: Install required packages
      #  run: |
      #    install.packages("openssl")
      #    install.packages("rmarkdown")
      #    install.packages("vitae")
      #  shell: Rscript {0}
      - uses: r-lib/actions/setup-renv@v2
      - uses: r-lib/actions/setup-pandoc@v2
      - name: Install tinytex
        run: |
          install.packages("tinytex")
          tinytex::install_tinytex()
        shell: Rscript {0}
     # - name: Install old xfun and knitr
     #    run: |
     #      packageurl <- "https://cran.r-project.org/src/contrib/Archive/knitr/knitr_1.45.tar.gz"
     #      install.packages(packageurl, repos=NULL, type="source")
     #      packageurl <- "https://cran.r-project.org/src/contrib/Archive/xfun/xfun_0.42.tar.gz"
     #      install.packages(packageurl, repos=NULL, type="source")
     #    shell: Rscript {0}
      - name: Setup R package environment
        run: |
          echo "R_MAKEVARS_USER=${HOME}/.R/Makevars" >> $GITHUB_ENV
          mkdir -p ${HOME}/.R
          echo "CFLAGS=-I/opt/homebrew/opt/gettext/include" > ${HOME}/.R/Makevars
          echo "CPPFLAGS=-I/opt/homebrew/opt/gettext/include" >> ${HOME}/.R/Makevars
          echo "LDFLAGS=-L/opt/homebrew/opt/gettext/lib" >> ${HOME}/.R/Makevars
        shell: bash
      - name: Render cv
        env:
          # set the SUPABASEUSER and SUPABASEPW secrets in the repository settings
          SUPABASEUSER: ${{ secrets.SUPABASEUSER }}
          SUPABASEPW: ${{ secrets.SUPABASEPW }}
          UPDATEGOOGLESCHOLAR: ${{github.event_name == 'schedule'}}
        run: Rscript -e 'rmarkdown::render("cv/cv.Rmd", output_format = "vitae::moderncv")'
      - name: Generate release tag
        id: generate_release_tag
        uses: amitsingh-007/next-release-tag@v5.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: 'v'
          tag_template: 'yyyy-mm-dd-i'
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          make_latest: true
          tag_name: ${{ steps.generate_release_tag.outputs.next_release_tag }}
          body: "Automated release of cv.pdf"
          files: |
            cv/cv.pdf
            
      #  name: Commit results
      #  run: |
      #    git commit cv/cv.pdf -m 'Re-build cv.Rmd' || echo "No changes to commit"
      #    git push origin || echo "No changes to commit"
